A simple solution is to sort the given array using an O(N log N) sorting algorithm
nd return the element at index k-1 in the sorted array. 
The Time Complexity of this solution is O(N log N) 

Input: arr[] = {7, 10, 4, 3, 20, 15}, k = 3 
Output: 7

#include<bits/stdc++.h>
using namespace std;

int kthSmallest(int arr[],int n,int k){
    sort(arr, arr+n);
    // Return k'th element in the sorted array matlb k hao to  k-1 index hi hoga na 
    return arr[k-1];    
}
int main() {
	int n,k;
	cin>>n>>k;
	int arr[n];
	for(int i = 0;i<n;i++){
	    cin>>arr[i];
	}
cout<<kthSmallest(arr,n,k)<<endl;
	return 0;
}
